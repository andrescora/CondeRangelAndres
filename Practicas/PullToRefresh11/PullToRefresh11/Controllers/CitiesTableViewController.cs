// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using UIKit;

namespace PullToRefresh11
{
	public partial class CitiesTableViewController : UITableViewController
	{

        #region variables

        Dictionary<string, List<string>> cities;
        List<string> titles;
        UIRefreshControl refreshControl; 

        #endregion

        #region constructor
        public CitiesTableViewController(IntPtr handle) : base(handle)
        {

        }

        #endregion

        #region viewDid
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            InitializeComponents();

        }
        #endregion

        #region table functionality

        public override nint NumberOfSections(UITableView tableView) => cities.Keys.Count;

        public override nint RowsInSection(UITableView tableView, nint section) => cities[titles[int.Parse(section.ToString())]].Count;

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            var cell = tableView.DequeueReusableCell("CityCell", indexPath);
            cell.TextLabel.Text = cities[titles[indexPath.Section]][indexPath.Row];
            return cell; 
        }

        public override string TitleForHeader(UITableView tableView, nint section) => titles[int.Parse(section.ToString())];

        public override string[] SectionIndexTitles(UITableView tableView) => titles.ToArray();


        #endregion


        #region internal
        void InitializeComponents()
        {
            CitiesManager.SharedInstance.CitiesFetched += CitiesManager_CitiesFetched;
            CitiesManager.SharedInstance.FetchedCitiesFailed += CitiesManager_FetchedCitiesFailed;

            cities = CitiesManager.SharedInstance.GetDefaultCities();
            titles = new List<string>();

            foreach (var item in cities.Keys)
            {
                titles.Add(item);
            }

            refreshControl = new UIRefreshControl(); 
            refreshControl.ValueChanged += RefreshControl_ValueChanged;
            TableView.RefreshControl = refreshControl;
        }

        #endregion

        #region user interactions
        void RefreshControl_ValueChanged(object sender, EventArgs e)
        {
            //Aqui vamos a descargar los datos de internet 
            CitiesManager.SharedInstance.FetchCities();

            //refreshControl.EndRefreshing();
        }
        #endregion

        #region cities manager events
        void CitiesManager_CitiesFetched(object sender, PullToRefresh11.CitiesEventArgs e)
        {
            cities = e.Cities;

            InvokeOnMainThread(() => {
                refreshControl.EndRefreshing();

                titles = new List<string>();

                foreach (var item in cities.Keys)
                {
                    titles.Add(item);
                }

                TableView.ReloadData();
            });

        }

        void CitiesManager_FetchedCitiesFailed(object sender, EventArgs e)
        {

            InvokeOnMainThread(() => {
                refreshControl.EndRefreshing();
                var okAlertController = UIAlertController.Create("Error", "Something failed: " + e, UIAlertControllerStyle.Alert);
                okAlertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));
                // Present Alert
                PresentViewController(okAlertController, true, null);
            });


        }

        #endregion


    }
}
